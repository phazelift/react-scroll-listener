(function(){var r,t,o,l,n,e,s=function(r,t){return function(){return r.apply(t,arguments)}};o=require("react/lib/ViewportMetrics"),e=require("types.js"),r=function(){function r(r){this._onHostScroll=s(this._onHostScroll,this),this._onHostScrollEnd=s(this._onHostScrollEnd,this),r=e.forceObject(r),this.scrollHost=e.forceObject(r.host),this.scrollStartHandlers={},this.scrollEndHandlers={},this.scrollTop=0,this.isScrolling=!1,this.scrollTimeoutDelay=e.forceNumber(r.delay,t),this._scrollTimeout=void 0,this.scrollListenerSet=!1}var t;return t=300,r.prototype.addScrollEventListener=function(){if(!this.scrollListenerSet){if(!this.scrollHost.addEventListener){if("undefined"==typeof window)return console.log("ScrollListener::addScrollEventListener -> bad or missing host/window, cannot add event-listener!");this.scrollHost=window}return this.scrollHost.addEventListener("scroll",this._onHostScroll),this.scrollListenerSet=!0}},r.prototype.removeScrollEventListener=function(){return this.scrollHost.removeEventListener("scroll",this._onHostScroll)},r.prototype.addScrollHandler=function(r,t,o){return(r=e.forceString(r))?(t=e.forceFunction(t),o&&!this.scrollEndHandlers[r]?this.scrollEndHandlers[r]=t:this.scrollStartHandlers[r]||(this.scrollStartHandlers[r]=t),this.addScrollEventListener()):console.log("ScrollListener::addScrollHandler -> cannot add handler without id!")},r.prototype.addScrollStartHandler=function(r,t){return this.addScrollHandler(r,t)},r.prototype.addScrollEndHandler=function(r,t){return this.addScrollHandler(r,t,!0)},r.prototype.removeScrollStartHandler=function(r){return delete this.scrollStartHandlers[r]},r.prototype.removeScrollEndHandler=function(r){return delete this.scrollEndHandlers[r]},r.prototype.removeScrollHandlers=function(){return this.scrollStartHandlers={},this.scrollEndHandlers={}},r.prototype._onHostScrollEnd=function(){var r,t;if(this.scrollTop===o.currentScrollTop){clearTimeout(this._scrollTimeout),this.isScrolling=!1,t=[];for(r in this.scrollEndHandlers)t.push(this.scrollEndHandlers[r]());return t}},r.prototype._onHostScroll=function(){var r;this.isScrolling=!0,this.scrollTop=o.currentScrollTop,clearTimeout(this._scrollTimeout);for(r in this.scrollStartHandlers)this.scrollStartHandlers[r]();return this._scrollTimeout=setTimeout(this._onHostScrollEnd,this.scrollTimeoutDelay)},r}(),l={},n=function(t){return l[t]||(l[t]=new r)},t=function(r){var t;return t={scrollListener:n(e.forceString(r,"generic")),scrollStartId:e.forceString(Date.now()),scrollEndId:e.forceString(Date.now()+1),componentDidMount:function(){return this.scrollListener.addScrollStartHandler(scrollStartId,this.onScrollStart),this.scrollListener.addScrollEndHandler(scrollEndId,this.onScrollEnd)},componentWillUnmount:function(){return this.scrollListener.removeScrollStartHandler(scrollStartId),this.scrollListener.removeScrollEndHandler(scrollEndId)}}},r.componentWillMount=function(){throw new Error("You are trying to use ScrollListenerMixin as an object, but it's a Function! Check the mixin for usage details.")},r.Mixin=t,r.ScrollListenerMixin=t,module.exports=r}).call(this);